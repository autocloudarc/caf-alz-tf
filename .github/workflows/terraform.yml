# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with a GitHub AZURE_CREDENTIALS service principal secret for provisioning the Cloud Adoption Framework Azure Landing Zones. 
# On pull request events, this workflow will run # `terraform init`, `terraform fmt`, and `terraform plan`. On push events
# to the "main" branch, `terraform apply` will be executed.
#
# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform

name: 'caf-alz-terraform'

on:
  worfklow_dispatch:
    branches:
    - "main"
  pull_request:

permissions:
  contents: read

jobs:

build-and-deploy:
  runs-on: ubuntu-latest
  steps:

  - name: Log in with Azure
      uses: azure/login@v1
      with:
      creds: ${{ secrets.AZURE_CREDENTIALS }}

  - name: Azure CLI script
      uses: azure/CLI@v1
      with:
      azcliversion: 2.39.0
      inlineScript: |
          az account show
          az storage -h  

  terraform:
    name: 'caf-alz-terraform'

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
